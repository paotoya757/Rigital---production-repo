/* ========================================================================
 * Copyright 2014 grupo
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 grupo

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201410152247

*/

package co.edu.uniandes.csw.grupo.softwaresalas.persistence;

import co.edu.uniandes.csw.grupo.encargado.master.persistence.entity.EncargadosoftwareSalasEntity;
import co.edu.uniandes.csw.grupo.encargado.master.persistence.entity.EncargadowikiEntity;
import co.edu.uniandes.csw.grupo.softwaresalas.logic.dto.SoftwareSalasDTO;
import co.edu.uniandes.csw.grupo.softwaresalas.logic.dto.SoftwareSalasPageDTO;
import javax.ejb.Stateless;
import javax.enterprise.inject.Default;

import co.edu.uniandes.csw.grupo.softwaresalas.persistence.api.ISoftwareSalasPersistence;
import co.edu.uniandes.csw.grupo.softwaresalas.persistence.converter.SoftwareSalasConverter;
import co.edu.uniandes.csw.grupo.softwaresalas.persistence.entity.SoftwareSalasEntity;
import co.edu.uniandes.csw.grupo.wiki.logic.dto.WikiDTO;
import co.edu.uniandes.csw.grupo.wiki.persistence.converter.WikiConverter;
import co.edu.uniandes.csw.grupo.wiki.persistence.entity.WikiEntity;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.Date;
import javax.ejb.LocalBean;
import javax.persistence.Query;

@Default
@Stateless 
@LocalBean
public class SoftwareSalasPersistence extends _SoftwareSalasPersistence  implements ISoftwareSalasPersistence {

//    @Override
//    public SoftwareSalasDTO createSoftwareSalas(SoftwareSalasDTO wiki) {
//                SoftwareSalasEntity entity=SoftwareSalasConverter.persistenceDTO2Entity(wiki);
//		entityManager.persist(entity);
//                
//                SoftwareSalasDTO rta = SoftwareSalasConverter.entity2PersistenceDTO(entity);
//                Long id = rta.getId();
//                Long idEncargado = rta.getEncargadoId();
//                
//                if(idEncargado != 0)
//                {
//                    System.out.println("ID: " + id);
//                    System.out.println("ID Encargado: " + idEncargado);
//
//                    EncargadosoftwareSalasEntity este = new EncargadosoftwareSalasEntity(idEncargado, id);  
//                    entityManager.persist(este);
//
//                }
//                
//		return rta;
//    }
    
    
    @SuppressWarnings("unchecked")
    public SoftwareSalasPageDTO getSoftwareSalasByParameters(String tipoMaquina ,String software ,String version ,String solicitante ,String numeroMaquina ,String name ,String descripcion ,String proposito ,String caracteristicas ,String workstationId ,String fechaCreacion1,String fechaCreacion2,String estaDestruido)
    {
        Query count = entityManager.createQuery("select count(u) from SoftwareSalasEntity u");
        Long regCount = 0L;
        regCount = Long.parseLong(count.getSingleResult().toString());
                
        String sql = "SELECT u FROM SoftwareSalasEntity u WHERE";
        if(!tipoMaquina.isEmpty())
            sql += " AND u.tipoMaquina like :tipoMaquina";
        if(!software.isEmpty())
            sql += " AND u.software like :software";
        if(!version.isEmpty())
            sql += " AND u.version like :version";
        if(!numeroMaquina.isEmpty())
            sql  += " AND u.numeroMaquina like :numeroMaquina";
        if(!name.isEmpty())
            sql += " AND u.name like :name";
        if(!descripcion.isEmpty())
            sql += " AND  u.descripcion like :descripcion";
        if(!proposito.isEmpty())
            sql += " AND  u.ram like :proposito";
        if(!caracteristicas.isEmpty())
            sql += " AND  u.caracteristicas like :caracteristicas";      
        if(!solicitante.isEmpty())
            sql += " AND  u.solicitante like :solicitante";
        
        
        if(!workstationId.isEmpty())
            sql += " AND  u.workstationId = :workstationId";
        
        if(!estaDestruido.isEmpty())
            sql += " AND  u.destruido = :estaDestruido";
        
        if(!fechaCreacion1.isEmpty() && !fechaCreacion2.isEmpty())
            sql += " AND u.fechaCreacion BETWEEN :fechaCreacion1 and :fechaCreacion2";

        // Se limpia la sentencia sql
        
        if(sql.endsWith("WHERE"))
            sql = sql.replace("WHERE", "");
        if(sql.contains("WHERE AND"))
            sql = sql.replace("WHERE AND", "WHERE");
        
        System.out.println(sql);
        
        boolean destruido = false;
        
        if(estaDestruido.equals("1"))
            destruido = true;
        
        Query q = entityManager.createQuery(sql);
        
        if(!tipoMaquina.isEmpty())
            q.setParameter("tipoMaquina", "%"+tipoMaquina+"%");
        if(!software .isEmpty())
            q.setParameter("software", "%"+software +"%");
        if(!version.isEmpty())
            q.setParameter("version", "%"+version+"%");
        if(!numeroMaquina.isEmpty())
            q.setParameter("numeroMaquina", "%"+numeroMaquina+"%");
        if(!name.isEmpty())
            q.setParameter("name", "%"+name+"%");
        if(!descripcion.isEmpty())
            q.setParameter("descripcion", "%"+descripcion+"%");
        if(!proposito.isEmpty())
            q.setParameter("proposito", "%"+proposito+"%");
        if(!caracteristicas.isEmpty())
            q.setParameter("caracteristicas", "%"+caracteristicas+"%");
        
        
        if(!workstationId.isEmpty())
            q.setParameter("workstationId", Long.parseLong(workstationId));
        if(!solicitante.isEmpty())
            q.setParameter("solicitante", "%" + solicitante + "%");
        
        if(!estaDestruido.isEmpty())
            q.setParameter("estaDestruido", destruido);
        
        if(!fechaCreacion1.isEmpty() && !fechaCreacion2.isEmpty())
        {
            String[] a1 = fechaCreacion1.split("-");
            String[] a2 = fechaCreacion2.split("-");
            
            Date fecha1 = new Date(Integer.parseInt(a1[0])-1900, Integer.parseInt(a1[1]),Integer.parseInt(a1[2]));
            Date fecha2 = new Date(Integer.parseInt(a2[0])-1900, Integer.parseInt(a2[1]),Integer.parseInt(a2[2]));
            
            q.setParameter("fechaCreacion1", fecha1);
            q.setParameter("fechaCreacion2", fecha2);            
        }
        
        
        SoftwareSalasPageDTO response = new SoftwareSalasPageDTO();
        response.setTotalRecords(regCount);
        response.setRecords(SoftwareSalasConverter.entity2PersistenceDTOList(q.getResultList()));
        return response;
        
            
    }

    public void desactivarRecurso(Long software) {
        Query query= entityManager.createQuery("UPDATE SoftwareSalasEntity s SET s.destruido='false' WHERE s.id = :software");
        query.setParameter("software", software);
        query.executeUpdate();
    }
    
    public void loadSoftwareSalasTuring()
    {
         try{  
        String archivo = "\\Archivos csv\\software-labsisturingcsv.csv";
        File file = new File(archivo);
        BufferedReader reader = new BufferedReader(new FileReader(file));
        reader.readLine();
        
        for(long i = 0; i < file.length();i++)
        {
            String actual = reader.readLine();
            String[] act = actual.split(";");
            SoftwareSalasEntity softSalas = new SoftwareSalasEntity();
           softSalas.setSoftware(act[0]);
           softSalas.setDescripcion(act[1]);
           softSalas.setSolicitante(act[2]);
           if(act[5].equals("") && act[4].equals(""))
           {
               softSalas.setVersion(act[3]);
           }
           else if(act[5].equals("") && !act[4].equals("")){
               softSalas.setVersion(act[4]);
           }
           else{
               softSalas.setVersion(act[5]);
           }
           softSalas.setCaracteristicas("Pertenece a la sala Turing.");
           entityManager.persist(softSalas);
        }
            
        }
         catch(Exception e)
         {
             
         }
    }
    public void loadSoftwareSalasWaira()
    {
         try{  
        String archivo = "\\Archivos csv\\software-labsisturingcsv.csv";
        File file = new File(archivo);
        BufferedReader reader = new BufferedReader(new FileReader(file));
        reader.readLine();
        
        for(long i = 0; i < file.length();i++)
        {
            String actual = reader.readLine();
            String[] act = actual.split(";");
            SoftwareSalasEntity softSalas = new SoftwareSalasEntity();
           softSalas.setSoftware(act[0]);
           if(!act[7].equals(""))
           {
               softSalas.setVersion(act[7]);
           }
           else if(!act[6].equals("")){
               softSalas.setVersion(act[6]);
           }
           else if(!act[5].equals("")){
               softSalas.setVersion(act[5]);
           }
           else if(!act[4].equals("")){
               softSalas.setVersion(act[4]);
           }
           else if(!act[3].equals("")){
               softSalas.setVersion(act[3]);
           }
           else if(!act[2].equals("")){
               softSalas.setVersion(act[2]);
           }
           else{
               softSalas.setVersion(act[1]);
           }
           softSalas.setCaracteristicas("Pertenece a la sala Waira.");
           entityManager.persist(softSalas);
        }
            
        }
         catch(Exception e)
         {
             
         }
    }
}