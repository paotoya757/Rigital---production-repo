/* ========================================================================
 * Copyright 2014 grupo
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 grupo

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201410152247

*/

package co.edu.uniandes.csw.grupo.maquinavirtual.persistence;

import co.edu.uniandes.csw.grupo.maquinavirtual.logic.dto.MaquinaVirtualPageDTO;
import javax.ejb.Stateless;
import javax.enterprise.inject.Default;

import co.edu.uniandes.csw.grupo.maquinavirtual.persistence.api.IMaquinaVirtualPersistence;
import co.edu.uniandes.csw.grupo.maquinavirtual.persistence.converter.MaquinaVirtualConverter;
import java.util.Date;
import javax.ejb.LocalBean;
import javax.persistence.Query;

@Default
@Stateless 
@LocalBean
public class MaquinaVirtualPersistence extends _MaquinaVirtualPersistence  implements IMaquinaVirtualPersistence {

    @SuppressWarnings("unchecked")
    public MaquinaVirtualPageDTO getMaquinasVirtualesByParameters(String ips ,String serviciosAsociados ,String version ,String sistemaOperativo ,String numDiscos ,String capacidadDiscos ,String ram ,String numCores ,String name ,String descripcion ,String proposito ,String caracteristicas ,String encargadoId ,String fechaCreacion1,String fechaCreacion2,String fechaVencimiento1,String fechaVencimiento2,String estaDestruido)
    {
        Query count = entityManager.createQuery("select count(u) from MaquinaVirtualEntity u");
        Long regCount = 0L;
        regCount = Long.parseLong(count.getSingleResult().toString());
                
        String sql = "SELECT u FROM MaquinaVirtualEntity u WHERE";
        if(!ips.isEmpty())
            sql += " AND u.ips like :ips";
        if(!serviciosAsociados.isEmpty())
            sql += " AND u.serviciosAsociados like :serviciosAsociados";
        if(!version.isEmpty())
            sql += " AND u.version like :version";
        if(!sistemaOperativo.isEmpty())
            sql  += " AND u.sistemaOperativo like :sistemaOperativo";
        if(!numDiscos.isEmpty())
            sql += " AND u.numDiscos like :numDiscos";
        if(!capacidadDiscos.isEmpty())
            sql += " AND  u.capacidadDiscos like :capacidadDiscos";
        if(!ram.isEmpty())
            sql += " AND  u.ram like :ram";
        if(!numCores.isEmpty())
            sql += " AND  u.numCores like :numCores";
        if(!name.isEmpty())
            sql += " AND  u.name like :name";
        if(!descripcion.isEmpty())
            sql += " AND  u.descripcion like :descripcion";
        if(!proposito.isEmpty())
            sql += " AND  u.proposito like :proposito";
        if(!caracteristicas.isEmpty())
            sql += " AND  u.softwaresalasId like :softwaresalasId";
        
        
        if(!encargadoId.isEmpty())
            sql += " AND  u.encargadoId = :encargadoId";
        
        if(!estaDestruido.isEmpty())
            sql += " AND  u.destruido = :estaDestruido";
        
        if(!fechaCreacion1.isEmpty() && !fechaCreacion2.isEmpty())
            sql += " AND u.fechaCreacion BETWEEN :fechaCreacion1 and :fechaCreacion2";

        if(!fechaVencimiento1.isEmpty() && !fechaVencimiento1.isEmpty())
            sql += " AND u.fechaVencimiento BETWEEN :fechaVencimiento1 and :fechaVencimiento2";
        // Se limpia la sentencia sql
        
        if(sql.endsWith("WHERE"))
            sql = sql.replace("WHERE", "");
        if(sql.contains("WHERE AND"))
            sql = sql.replace("WHERE AND", "WHERE");
        
        System.out.println(sql);
        
        boolean destruido = false;
        
        if(estaDestruido.equals("1"))
            destruido = true;
        
        Query q = entityManager.createQuery(sql);
        
        if(!ips.isEmpty())
            q.setParameter("ips", "%"+ips+"%");
        if(!serviciosAsociados .isEmpty())
            q.setParameter("serviciosAsociados", "%"+serviciosAsociados +"%");
        if(!version.isEmpty())
            q.setParameter("version", "%"+version+"%");
        if(!sistemaOperativo.isEmpty())
            q.setParameter("sistemaOperativo", "%"+sistemaOperativo+"%");
        if(!numDiscos.isEmpty())
            q.setParameter("numDiscos", "%"+numDiscos+"%");
        if(!capacidadDiscos.isEmpty())
            q.setParameter("capacidadDiscos", "%"+capacidadDiscos+"%");
        if(!ram.isEmpty())
            q.setParameter("ram", "%"+ram+"%");
        if(!numCores.isEmpty())
            q.setParameter("numCores", "%"+numCores+"%");
        if(!name.isEmpty())
            q.setParameter("name", "%"+name+"%");
        if(!descripcion.isEmpty())
            q.setParameter("descripcion", "%"+descripcion+"%");
        if(!proposito.isEmpty())
            q.setParameter("proposito", "%"+proposito+"%");
        if(!caracteristicas.isEmpty())
            q.setParameter("caracteristicas", "%"+caracteristicas+"%");
        
        
        if(!encargadoId.isEmpty())
            q.setParameter("encargadoId", Long.parseLong(encargadoId));
        
        if(!estaDestruido.isEmpty())
            q.setParameter("estaDestruido", destruido);
        
        if(!fechaCreacion1.isEmpty() && !fechaCreacion2.isEmpty())
        {
            String[] a1 = fechaCreacion1.split("-");
            String[] a2 = fechaCreacion2.split("-");
            
            Date fecha1 = new Date(Integer.parseInt(a1[0])-1900, Integer.parseInt(a1[1]),Integer.parseInt(a1[2]));
            Date fecha2 = new Date(Integer.parseInt(a2[0])-1900, Integer.parseInt(a2[1]),Integer.parseInt(a2[2]));
            
            q.setParameter("fechaCreacion1", fecha1);
            q.setParameter("fechaCreacion2", fecha2);            
        }
        
        if(!fechaVencimiento1.isEmpty() && !fechaVencimiento2.isEmpty())
        {
            String[] a1 = fechaVencimiento1.split("-");
            String[] a2 = fechaVencimiento2.split("-");
            
            Date fecha1 = new Date(Integer.parseInt(a1[0])-1900, Integer.parseInt(a1[1]),Integer.parseInt(a1[2]));
            Date fecha2 = new Date(Integer.parseInt(a2[0])-1900, Integer.parseInt(a2[1]),Integer.parseInt(a2[2]));
            
            q.setParameter("fechaVencimiento1", fecha1);
            q.setParameter("fechaVencimiento2", fecha2);            
        }
        
        MaquinaVirtualPageDTO response = new MaquinaVirtualPageDTO();
        response.setTotalRecords(regCount);
        response.setRecords(MaquinaVirtualConverter.entity2PersistenceDTOList(q.getResultList()));
        return response;
        
            
    }
}