/* ========================================================================
 * Copyright 2014 grupo
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 grupo

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201410152247

*/

package co.edu.uniandes.csw.grupo.paginaweb.master.logic.ejb;

import co.edu.uniandes.csw.grupo.problema.logic.dto.ProblemaDTO;
import co.edu.uniandes.csw.grupo.problema.persistence.api.IProblemaPersistence;
import co.edu.uniandes.csw.grupo.paginaweb.logic.dto.PaginaWebDTO;
import co.edu.uniandes.csw.grupo.paginaweb.master.logic.api._IPaginaWebMasterLogicService;
import co.edu.uniandes.csw.grupo.paginaweb.master.logic.dto.PaginaWebMasterDTO;
import co.edu.uniandes.csw.grupo.paginaweb.master.persistence.api.IPaginaWebMasterPersistence;
import co.edu.uniandes.csw.grupo.paginaweb.master.persistence.entity.PaginaWebproblemaEntity;
import co.edu.uniandes.csw.grupo.paginaweb.persistence.api.IPaginaWebPersistence;
import javax.inject.Inject;

public abstract class _PaginaWebMasterLogicService implements _IPaginaWebMasterLogicService {

    @Inject
    protected IPaginaWebPersistence paginawebPersistance;
    @Inject
    protected IPaginaWebMasterPersistence paginawebMasterPersistance;
    @Inject
    protected IProblemaPersistence problemaPersistance;

    public PaginaWebMasterDTO createMasterPaginaWeb(PaginaWebMasterDTO paginaweb) {
        PaginaWebDTO persistedPaginaWebDTO = paginawebPersistance.createPaginaWeb(paginaweb.getPaginaWebEntity());
        if (paginaweb.getCreateproblema() != null) {
            for (ProblemaDTO problemaDTO : paginaweb.getCreateproblema()) {
                ProblemaDTO createdProblemaDTO = problemaPersistance.createProblema(problemaDTO);
                PaginaWebproblemaEntity paginawebProblemaEntity = new PaginaWebproblemaEntity(persistedPaginaWebDTO.getId(), createdProblemaDTO.getId());
                paginawebMasterPersistance.createPaginaWebproblemaEntity(paginawebProblemaEntity);
            }
        }
        // update problema
        if (paginaweb.getUpdateproblema() != null) {
            for (ProblemaDTO problemaDTO : paginaweb.getUpdateproblema()) {
                problemaPersistance.updateProblema(problemaDTO);
                PaginaWebproblemaEntity paginawebProblemaEntity = new PaginaWebproblemaEntity(persistedPaginaWebDTO.getId(), problemaDTO.getId());
                paginawebMasterPersistance.createPaginaWebproblemaEntity(paginawebProblemaEntity);
            }
        }
        return paginaweb;
    }

    public PaginaWebMasterDTO getMasterPaginaWeb(Long id) {
        return paginawebMasterPersistance.getPaginaWeb(id);
    }

    public void deleteMasterPaginaWeb(Long id) {
        paginawebPersistance.deletePaginaWeb(id);
    }

    public void updateMasterPaginaWeb(PaginaWebMasterDTO paginaweb) {
        paginawebPersistance.updatePaginaWeb(paginaweb.getPaginaWebEntity());

        //---- FOR RELATIONSHIP
        // delete problema
        if (paginaweb.getDeleteproblema() != null) {
            for (ProblemaDTO problemaDTO : paginaweb.getDeleteproblema()) {
                paginawebMasterPersistance.deletePaginaWebproblemaEntity(paginaweb.getPaginaWebEntity().getId(), problemaDTO.getId());
            }
        }
        // persist new problema
        if (paginaweb.getCreateproblema() != null) {
            for (ProblemaDTO problemaDTO : paginaweb.getCreateproblema()) {
                PaginaWebproblemaEntity paginawebProblemaEntity = new PaginaWebproblemaEntity(paginaweb.getPaginaWebEntity().getId(), problemaDTO.getId());
                paginawebMasterPersistance.createPaginaWebproblemaEntity(paginawebProblemaEntity);
            }
        }
        // update problema
        if (paginaweb.getUpdateproblema() != null) {
            for (ProblemaDTO problemaDTO : paginaweb.getUpdateproblema()) {
                paginawebMasterPersistance.deletePaginaWebproblemaEntity(paginaweb.getPaginaWebEntity().getId(), problemaDTO.getId());
                problemaPersistance.updateProblema(problemaDTO);
                PaginaWebproblemaEntity paginawebProblemaEntity = new PaginaWebproblemaEntity(paginaweb.getId(), problemaDTO.getId());
                paginawebMasterPersistance.createPaginaWebproblemaEntity(paginawebProblemaEntity);
                
            }
        }
    }
}
